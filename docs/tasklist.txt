This is a list of tasks to be done in order to develop
     	       	  	MappaFungi
an android-app displaying funghi distribution following
key environmental constraints.

1) key inputs:		resolution:
   - soil type		vector data, major soil types resolved
   - vegetation type	1 km
   - soil moisture	1 km
   - topography		1 km
   - temperature	1 km 

2) tasks
   - get all input data sets required
     - soil type   	done (source: ???)
     - vegetation type	done (source: ???)
     - soil moisture	done (source: ???)
     - topography	pending
     - temperature	done (source: MODIS MODA???)
     - phenological information (database)
   - convert input data to format required
     - raster data: GeoTiff
       - soil moisture: BUFR -> NetCDF4 -> GeoTiff (R script)
       - temperature: MODIS hdf -> GeoTiff (R script)
     - vector data: shapefiles
   - write script to retrieve updated data on a regular basis:
     - soil moisture: every 3-5 days
     - temperature:   daily
   - clip datasets to study area extent (Germany): 
     - N: 55.0585 degrees -> 55.6
     - S: 47.2703 degrees -> 46.7
     - E: 15.0419 degrees -> 15.6
     - W:  5.8667 degrees ->  5.3 
   - remapping to one common projection
     - determine projection type: UTM (also applied in Google Maps)
   - merge datasets within QGIS:
     - to combine raster and vector information,
       rasterize vector data if necessary
     - for each pixel, information is required for:
       - soil type: acidic, alcalic? boolean 
       - vegetation type: non-forested, broadleaf, evergreen? boolean
       - soil moisture: 
       	      need approach that accounts for long-term soil moisture
	      conditions, i.e. > last 2 weeks
	      however, ideally only current data should be kept, so that
	      method should update raster data with new data once
	      available
	      method: count days with SWC > threshold within last 20 days
	      if n > 14, SWC conditions are met
	      could be updated to fractions between 0-1,
	      with 0=<10, 1=20, and linear scaling in between
	      requirements:
	      - write script for automated download of HSAF data
	      - check whether raster data are well filled, i.e. how
	      	many raster files (i.o.w. how many days) are required 
		to have a SWC value for each pixel
	      - if daily coverage was not possible, calculate percentage
	      	of values above threshold within last 20 days, thus I
		would need two values per pixel: n SWC values, 
       - phenology: growing season? boolean
       - temperature: 
